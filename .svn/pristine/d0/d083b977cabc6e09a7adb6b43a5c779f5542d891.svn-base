package com.ztesoft.mobile.v2.controller.speed;

import com.ztesoft.mobile.v2.controller.common.CommonBaseController;
import com.ztesoft.mobile.v2.controller.common.WebConfigController;
import com.ztesoft.mobile.v2.core.Result;
import com.ztesoft.mobile.v2.service.app.MobileDataInstallService;
import com.ztesoft.mobile.v2.service.app.MobileDataInstallServiceImpl;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.client.RestTemplate;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.*;

import static sun.font.FontManager.logger;
@Controller
public class SpeedController extends WebConfigController {

    private static final Logger logger = Logger.getLogger(SpeedController.class);
    private MobileDataInstallService dataInstallService = new MobileDataInstallServiceImpl();

    @RequestMapping(value = {"/client/speed/queryBroadband1"})
    @ResponseBody
    public Object queryBroadband(@RequestBody Map<String, Object> data, ModelMap model,
                                 HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryBroadband");
        String account = (String) data.get("account");
        RestTemplate restTemplate = new RestTemplate();
        String url = "http://192.168.101.15:5090/bdes-oi/thirdPartyAction/userBindNumberInfo.action?dNumber="+account;
        Map param = new HashMap();
        Map resMap = restTemplate.postForObject(url, param, Map.class);
        List<Map<String,Object>> list = (List)resMap.get("data");
        
        if(list!=null){
            if(list.size()>0){
                Map<String, Object> map = list.get(0);
                Set<String> keySet = map.keySet();
                Iterator<String> it = keySet.iterator();
                while(it.hasNext()) {
                    System.out.println("speed"+" "+map.get("speed"));
                    Map<String,String> speed = new HashMap();
                    speed.put("speed", (String) map.get("speed"));
                    logger.info("调用方法：queryBroadband 返回结果:"+speed+",参数:"+account);
                    return speed;
                }
            }
        }
        logger.info("调用方法：queryBroadband 返回结果:"+null+",参数:"+account);
        return null;
    }


    @RequestMapping(value = {"/client/dataInstall/queryDataInstallByOrg"})
    @ResponseBody
    public Object queryDataInstallByOrg(@RequestBody Map<String, Object> data, ModelMap model,
                                 HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryDataInstallByOrg");
        String org_id = data.get("org_id").toString();
        Map<String, Object> result = new HashMap<String, Object>();
        String falg = dataInstallService.queryDataInstallByOrg(org_id);
        result.put("result",falg);
        return result;
    }


    @RequestMapping(value = {"/client/bss/project/queryBSSProject"})
    @ResponseBody
    public Object queryBSSProject(@RequestBody Map<String, Object> data, ModelMap model,
                                        HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryDataInstallByOrg");
        String work_order_id = data.get("work_order_id").toString();
        Map<String, String> result = new HashMap<String, String>();
        result = dataInstallService.queryBSSProject(work_order_id);

        return result;
    }
    @RequestMapping(value = {"/client/query/obd/queryPixianCode"})
    @ResponseBody
    public Object queryPixianCode(@RequestBody Map<String, Object> data, ModelMap model,
                                  HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryDataInstallByOrg");
        Map<String, Object>  param = (Map<String, Object>) data.get("param");
        Map<String, String> result = new HashMap<String, String>();
        result = dataInstallService.queryPixianCode(param.get("workOrderId").toString());

        return result;
    }

    @RequestMapping(value = {"/client/query/project/queryPowerModel"})
    @ResponseBody
    public Object queryPowerModel(@RequestBody Map<String, Object> data, ModelMap model,
                                  HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryDataInstallByOrg");
        String base_order_id = data.get("base_order_id").toString();
        String hgu_sn = data.get("hgu_sn").toString();
        String staffId = data.get("staffId").toString();
        String STAFF_NAME = data.get("STAFF_NAME").toString();
        Map<String, String> result = new HashMap<String, String>();
        result = dataInstallService.queryPowerModel(base_order_id,hgu_sn,staffId,STAFF_NAME);

        return result;
    }

    @RequestMapping(value = {"/client/query/project/queryPowerModel1"})
    @ResponseBody
    public Object queryPowerModel1(@RequestBody Map<String, Object> data, ModelMap model,
                                  HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryDataInstallByOrg");
        String order_id = data.get("order_id").toString();
        String hgu_sn = data.get("hgu_sn").toString();
        String staffId = data.get("staffId").toString();
        String STAFF_NAME = data.get("STAFF_NAME").toString();
        Map<String, String> result = new HashMap<String, String>();
        result = dataInstallService.queryPowerModel1(order_id,hgu_sn,staffId,STAFF_NAME);
        System.out.println("result=-=-=-======================================================>>>>>>"+result);
        return result;
    }

    @RequestMapping(value = {"/client/query/obd/queryOBDInfo"})
    @ResponseBody
    public Result queryOBDInfo(@RequestBody Map<String, Object> data, ModelMap model,
                                  HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryDataInstallByOrg");
        String qrCode = data.get("qrCode").toString();
        String workOrderId = data.get("workOrderId").toString();

        Result result = dataInstallService.queryOBDInfo(qrCode,workOrderId);

        return result;
    }

    @RequestMapping(value = {"/client/execute/dataInstall/processDataInstall"})
    @ResponseBody
    public Result processDataInstall(@RequestBody Map<String, Object> data, ModelMap model,
                               HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：processDataInstall");


        Result result = dataInstallService.processDataInstall(data);

        return result;
    }

    @RequestMapping(value = {"/client/execute/dataInstall/processDataInstall1"})
    @ResponseBody
    public Result processDataInstall1(@RequestBody Map<String, Object> data, ModelMap model,
                               HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：processDataInstall1");

        Result result = dataInstallService.processDataInstall1(data);
        return result;
    }


    @RequestMapping(value = {"/client/dataInstall/query/querymakeProcessData"})
    @ResponseBody
    public Object querymakeProcessData(@RequestBody Map<String, Object> data, ModelMap model,
                                       HttpServletRequest request, HttpServletResponse response) throws Exception{
        logger.info("调用方法：queryDataInstallByOrg");
        String wk_order_id = data.get("wk_order_id").toString();
        Map<String, String> result = new HashMap<String, String>();
        result = dataInstallService.querymakeProcessData(wk_order_id);

        return result;
    }
}
